
Cadence Innovus(TM) Implementation System.
Copyright 2020 Cadence Design Systems, Inc. All rights reserved worldwide.

Version:	v20.14-s095_1, built Mon Apr 19 14:41:42 PDT 2021
Options:	-stylus -file runPnR.tcl 
Date:		Wed May  8 17:43:30 2024
Host:		centos.localdomain (x86_64 w/Linux 4.18.0-408.el8.x86_64) (6cores*6cpus*Intel(R) Core(TM) i5-8400 CPU @ 2.80GHz 9216KB)
OS:		CentOS Stream release 8

License:
		invs	Innovus Implementation System	20.1	checkout succeeded
		8 CPU jobs allowed with the current license(s). Use set_multi_cpu_usage to set your required CPU count.


Create and set the environment variable TMPDIR to /tmp/innovus_temp_675951_centos.localdomain_VLSI_ljGAby.

Change the soft stacksize limit to 0.2%RAM (31 mbytes). Set global soft_stack_size_limit to change the value.
[INFO] Loading PVS 20.11 fill procedures

**INFO:  MMMC transition support version v31-84 

#@ Processing -files option
@innovus 1> source runPnR.tcl
#@ Begin verbose source (pre): source runPnR.tcl
@file 1: #######################################################
@file 2: #                                                     
@file 3: #  Innovus Command Logging File                     
@file 4: #  Created on Thu Oct 22 09:51:30 2020                
@file 5: #                                                     
@file 6: #######################################################
@file 7:
@file 8: #@(#)CDS: Innovus v20.10-p004_1 (64bit) 05/07/2020 20:02 (Linux 2.6.32-431.11.2.el6.x86_64)
@file 9: #@(#)CDS: NanoRoute 20.10-p004_1 NR200413-0234/20_10-UB (database version 18.20.505) {superthreading v1.69}
@file 10: #@(#)CDS: AAE 20.10-p005 (64bit) 05/07/2020 (Linux 2.6.32-431.11.2.el6.x86_64)
@file 11: #@(#)CDS: CTE 20.10-p005_1 () Apr 14 2020 09:14:28 ( )
@file 12: #@(#)CDS: SYNTECH 20.10-b004_1 () Mar 12 2020 22:18:21 ( )
@file 13: #@(#)CDS: CPE v20.10-p006
@file 14: #@(#)CDS: IQuantus/TQuantus 19.1.3-s155 (64bit) Sun Nov 3 18:26:52 PST 2019 (Linux 2.6.32-431.11.2.el6.x86_64)
@file 15:
@file 16: set_db init_netlist_files ../physical_design/dff_netlist_dft.v
@file 17: set_db init_lef_files {../lef/gsclib045_tech.lef ../lef/gsclib045_macro.lef}
@file 18: set_db init_power_nets VDD
@file 19: set_db init_ground_nets VSS
@file 20: set_db init_mmmc_files  dff.view
@file 21: read_mmmc dff.view
#@ Begin verbose source dff.view (pre)
@file 1:
@file 2: create_library_set -name max_timing\
   -timing ../lib/slow_vdd1v0_basicCells.lib
@file 4:
@file 5: create_library_set -name min_timing\
   -timing ../lib/fast_vdd1v0_basicCells.lib
@file 7:
@file 8: create_timing_condition -name default_mapping_tc_2\
   -library_sets min_timing
@file 10: create_timing_condition -name default_mapping_tc_1\
   -library_sets max_timing
@file 12:
@file 13: create_rc_corner -name rccorners\
   -cap_table ../captable/cln28hpl_1p10m+alrdl_5x2yu2yz_typical.capTbl\
   -pre_route_res 1\
   -post_route_res 1\
   -pre_route_cap 1\
   -post_route_cap 1\
   -post_route_cross_cap 1\
   -pre_route_clock_res 0\
   -pre_route_clock_cap 0\
   -qrc_tech ../QRC_Tech/gpdk045.tch
**ERROR: (TCLCMD-995):	Can not open file '../captable/cln28hpl_1p10m+alrdl_5x2yu2yz_typical.capTbl' for RC corner
**ERROR: (IMPSE-110):	File 'dff.view' line 13: errors out.
#@ End verbose source dff.view

    while executing
"create_rc_corner -name rccorners\
   -cap_table ../captable/cln28hpl_1p10m+alrdl_5x2yu2yz_typical.capTbl\
   -pre_route_res 1\
   -post_route_res 1\
 ..."
    (file "dff.view" line 13)
    invoked from within
"::se_source_orig dff.view"
    ("uplevel" body line 1)
    invoked from within
"uplevel [concat ::se_source_orig $args]"
    invoked from within
"if {[::SE::source_verbose_file_state $file_name] == 1} {
              ::SE::source_verbose_start $file_name
              set st [uplevel [concat ::s..."
    invoked from within
"if {$useTclVerbose} {
          # use tcl internal method
          set st ""
          if {[::SE::source_verbose_file_state $file_name] == 1} {
     ..."
    invoked from within
"if {$largeFile == 1} {
    if {$enableVerbose == 0 && [::SE::isEchoFile] == 1} {
      $putCmd "Sourcing $file_name"
    }
    set st [uplevel [concat..."
    (procedure "source" line 148)
    invoked from within
"source dff.view"
    ("uplevel" body line 1)
    invoked from within
"uplevel #0 {source dff.view}"
**ERROR: (IMPSE-110):	File 'runPnR.tcl' line 21: errors out.
#@ End verbose source runPnR.tcl
**ERROR: (IMPSYT-6692):	Invalid return code while executing 'runPnR.tcl' was returned and script processing was stopped. Review the following error in 'runPnR.tcl' then restart.
Error info: runPnR.tcl: 
    while executing
"read_mmmc dff.view"
    (file "runPnR.tcl" line 21)
    invoked from within
"::se_source_orig runPnR.tcl"
    ("uplevel" body line 1)
    invoked from within
"uplevel [concat ::se_source_orig $args]"
    invoked from within
"if {[::SE::source_verbose_file_state $file_name] == 1} {
              ::SE::source_verbose_start $file_name
              set st [uplevel [concat ::s..."
    invoked from within
"if {$useTclVerbose} {
          # use tcl internal method
          set st ""
          if {[::SE::source_verbose_file_state $file_name] == 1} {
     ..."
    invoked from within
"if {$largeFile == 1} {
    if {$enableVerbose == 0 && [::SE::isEchoFile] == 1} {
      $putCmd "Sourcing $file_name"
    }
    set st [uplevel [concat..."
    (procedure "source" line 148)
    invoked from within
"source runPnR.tcl"
    invoked from within
"::se::run_command_from_console "source runPnR.tcl""
    invoked from within
"eval_novus {::se::run_command_from_console "source runPnR.tcl"}"
    (in namespace inscope "::" script line 1)
    invoked from within
"namespace inscope :: eval_novus "::se::run_command_from_console \"source $fileName\""".
@innovus 2> exit


*** Memory Usage v#1 (Current mem = 810.695M, initial mem = 298.102M) ***
*** Message Summary: 0 warning(s), 4 error(s)

--- Ending "Innovus" (totcpu=0:00:26.9, real=0:02:16, mem=810.7M) ---
